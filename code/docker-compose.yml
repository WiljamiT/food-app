version: "3.0"
services:
    # frontend
    application:
        container_name: foodapp-application
        image: node:lts-alpine
        ports:
            - "3000:3000"
        volumes:
            - ./code:/home/node/code
        working_dir: /home/node/code/foodapp-application
        depends_on:
            - backend
        environment:
            # set node environment to development
            # - NODE_ENV=development
            # configure hot reloading
            - HOST=0.0.0.0
            - CHOKIDAR_USEPOLLING=true
            - CHOKIDAR_INTERVAL=100
        tty: true
        command: "npm run dev"

    # backend
    backend:
        container_name: foodapp-backend
        image: mongo:latest
        restart: always
        environment:
            DB_NAME: foodapp
            MONGO_INITDB_DATABASE: foodapp
        ports:
            - 27017:27017
        volumes:
            - ./.docker/foodapp-backend/seed-mongodb1.js:/docker-entrypoint-initdb.d/seed-mongodb1.js

        # volumes:
        #     - "C:/Users/wtakk/OneDrive/Desktop/ravintola/food-app/code/.docker/foodapp-backend/seed-mongodb1.js:/docker-entrypoint-initdb.d/seed-mongodb1.js"

            - mongodb_data_container:/data/db
    
    # front end testing with jest
    jest:
        # name the container to find it later
        container_name: foodapp-jest
        image: node:lts-alpine
        # configure working directory for running the jest
        working_dir: /home/node/code/foodapp-application
        volumes:
            # map current directory to the working directory
            - ./code:/home/node/code
        # this container depends on a running backend container
        depends_on:
            - backend
        environment:
            - NODE_ENV=test
        # keep container alive for installing next.js
        tty: true
        command: "npm run testWatch"
    
volumes:
    mongodb_data_container: